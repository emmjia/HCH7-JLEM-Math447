# creating data table
factorA = rep(c("-","+","-","+","-","+","-","+"), times = 3)
factorB = rep(c("-","-","+","+","-","-","+","+"), times = 3)
factorC = rep(c("-","-","-","-","+","+","+","+"), times = 3)
Rep = rep(c("I", "II", "III"), each = 8)
yield = c(22,32,35,55,44,40,60,39,31,43,34,47,45,37,50,41,25,29,50,46,38,36,54,47)
#dataframe
cutting.speed.long = data.frame(factorA, factorB, factorC, Rep, yield)
View(cutting.speed.long)
#############################################
##     Blocking a replicated design         #
#############################################
#Yield data (pp. 234)
yield=read.table("C:/Users/Emmanuel/Desktop/SPRING 2018/Math 447/Chapter 7/yield.txt", header = TRUE)
summary(aov(Yield ~ Rep + A * B, yield)) #analysis of design with blocking
summary(aov(Yield ~ A * B, yield)) # analysis of design without blocking
cutting.lm = summary(lm(yield ~ Rep + factorA * factorB * factorC, cutting.speed.long)); cutting.lm
# defining coded
coded=function(x) #a function to code variable x
{
ifelse(x=="+", 1, -1)
}
# creating data table
factorA = rep(c("-","+","-","+","-","+","-","+"), times = 3)
factorB = rep(c("-","-","+","+","-","-","+","+"), times = 3)
factorC = rep(c("-","-","-","-","+","+","+","+"), times = 3)
Rep = rep(c("I", "II", "III"), each = 8)
yield = c(22,32,35,55,44,40,60,39,31,43,34,47,45,37,50,41,25,29,50,46,38,36,54,47)
#dataframe
cutting.speed.long = data.frame(factorA, factorB, factorC, Rep, yield)
cutting.lm = summary(lm(yield ~ Rep + factorA * factorB * factorC, cutting.speed.long)); cutting.lm
#############################################
##     Blocking a replicated design         #
#############################################
#Yield data (pp. 234)
yield=read.table("C:/Users/Emmanuel/Desktop/SPRING 2018/Math 447/Chapter 7/yield.txt", header = TRUE)
View(yield)
View(cutting.speed.long)
summary(aov(Yield ~ Rep + A * B, yield)) #analysis of design with blocking
View(yield)
View(cutting.lm)
cutting.lm = summary(lm(yield ~ Rep + factorA * factorB * factorC, cutting.speed.long)); cutting.lm
###############################################
##     confounding a 2^K desgin in 2 blocks ###
###############################################
#filtration rate data (eg. 6.2/7.2 page 257/310)
filtration=read.table("C:/Users/Emmanuel/Desktop/SPRING 2018/Math 447/Chapter 7/filtration.txt", header = TRUE)
for (j in 1:4)
filtration[, j]=as.numeric(coded(filtration[, j]))
#factors have already been converted from "-","+" to -1, +1 coding
#Note that ABCD cannot be estimated, because it is confounded with blocks
filtration$Block=filtration$A * filtration$B *filtration$C * filtration$D
summary(lm(Rate ~ Block + A * B * C * D, filtration))
View(filtration)
Rep
View(yield)
